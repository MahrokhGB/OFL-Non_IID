General params to tune
-m', "--model", type=str, default="cnn")
parser.add_argument('-lbs', "--batch_size", type=int, default=10)
parser.add_argument('-lr', "--local_learning_rate", type=float, default=0.005,
                    help="Local learning rate")
parser.add_argument('-gr', "--global_rounds", type=int, default=2000)
parser.add_argument('-ls', "--local_epochs", type=int, default=1,
                    help="Multiple update steps in one local epoch.")
parser.add_argument('-algo', "--algorithm", type=str, default="FedAvg")
parser.add_argument('-jr', "--join_ratio", type=float, default=1.0,
                    help="Ratio of clients per round")


parser.add_argument('-sfn', "--save_folder_name", type=str, default='items')


parser.add_argument('-bnpc', "--batch_num_per_client", type=int, default=2)
parser.add_argument('-nnc', "--num_new_clients", type=int, default=0)
parser.add_argument('-fte', "--fine_tuning_epoch", type=int, default=0)

1. FedAvg
python main.py -nc 40 -data femnist_reduced -m cnn -algo FedAvg -gr 2000 -did 0 -go cnn
result: 0.885

2. MAML
specific params:
'-bt', "--beta", type=float, default=0.0, Second learning rate of Per-FedAvg
-lam', "--lamda", type=float, default=1.0, Regularization weight# NOTE: shouldn't be 0?
parser.add_argument('-lrp', "--p_learning_rate", type=float, default=0.01,
                    help="personalized learning rate to caculate theta aproximately using K steps")

# NOTE: lbs should be less than half of the training dataset size
python -u main.py -lbs 10 -nc 40 -nb 10 -data femnist_reduced -algo PerAvg -gr 2000 -m dnn -did 1 -bt 0.001 -go dnn > femnist_reduced_peravg.out 2>&1 &
python -u main.py -lbs 10 -nc 40 -nb 10 -data femnist_reduced -algo PerAvg -gr 2000 -m cnn -did 1 -bt 0.001 -go cnn > femnist_reduced_peravg1.out 2>&1 &
python -u main.py -lbs 10 -nc 40 -nb 10 -data femnist_reduced -algo PerAvg -gr 2000 -m resnet -did 1 -bt 0.001 -go resnet > femnist_reduced_peravg2.out 2>&1 &

# TODO: tune beta
DNN: (1e-4, ), (1e-3, 0.790), (1e-2, ), (1e-1, )

bash
conda activate ofliid
cd Simulations/OFL-Non_IID/system